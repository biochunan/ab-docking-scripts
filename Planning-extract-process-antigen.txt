#Extracting chain identifier for antigen:
grep 'CHAIN A' /serv/data/af2/cleanpdbstructures/*.pdb | awk '{print $5}'

#Translating Antigen:
pdbtranslate -x 20.0 -y 20.0 -z 20.0 3ujt_1_Ag.pdb > 3ujt_1_Ag_tr.pdb

#Rotating Antigen:
pdbrotate -x 20.0 -y 20.0 -z 20.0 3ujt_1_Ag_tr.pdb > 3ujt_1_Ag_tr_rot.pdb

#Generating random numbers for translation:
$(($RANDOM%50-25))
#this would generate a random number in the range -25 > x < 25

#Generating a number in the range 45 > x < 315 for the rotation:
$((($RANDOM%270)+45))

#Test script for single pdb file (3ujt_1.pdb):
pdbgetchain h /serv/data/af2/cleanpdbstructures/pdb3ujt_1.pdb | pdbtranslate -x $(($RANDOM%50-25)) -y $(($RANDOM%50-25)) -z $(($RANDOM%50-25)) | pdbrotate -x $((($RANDOM%270)+45)) -y $((($RANDOM%270)+45)) -z $((($RANDOM%270)+45)) > 3ujt_1_Ag.pdb

#Test script for extracting chain identifier from each antigen in 'cleanpdbstructures/*' 
for file in /serv/data/af2/cleanpdbstructures/*.pdb
do
chainid = grep 'CHAIN A' /serv/data/af2/cleanpdbstructures/$file.pdb | awk '{print $5}'
pdbgetchain $chainid /serv/data/af2/cleanpdbstructures/$file.pdb | pdbtranslate -x $(($RANDOM%50-25)) -y $(($RANDOM%50-25)) -z $(($RANDOM%50-25)) | pdbrotate -x $((($RANDOM%270)+45)) -y $((($RANDOM%270)+45)) -z $((($RANDOM%270)+45)) > $file_Ag.pdb
done
#don't think it worked :(

#final code for get-process-antigen.sh:
#! /bin/sh
for file in /serv/data/af2/cleanpdbstructures/*.pdb
do
chainid="grep 'CHAIN A' $file | awk '{print $5}'"
pdbgetchain $chainid $file | pdbtranslate -x $(($RANDOM%50-25)) -y $(($RANDOM%50-25)) -z $(($RANDOM%50-25)) | pdbrotate -x $((($RANDOM%270)+45)) -y $((($RANDOM%270)+45)) -z $((($RANDOM%270)+45)) > $(basename ${file##*/pdb} .pdb)_Ag.pdb
done

